from google import genai
from google.genai.types import HttpOptions
from google.genai import types
from google.cloud import language_v2
from langsmith import traceable

classification_prompt = """
You are an email classification system for a customer support team. 
Categorize the following email into ONE of these 10 support groups:

1. **Product Consultation**: Questions about product features, compatibility, or usage before purchase.
2. **Order Support**: Issues with ordering, payment options, or shipping selection.
3. **Technical Assistance**: Help with installation, setup, or troubleshooting.
4. **Shipping and Delivery Updates**: Status, tracking, or delivery date inquiries.
5. **Returns and Exchanges Management**: Returns, exchanges, or refund requests.
6. **Claims and Product Defects**: Reports of defective/damaged items.
7. **Payment and Billing Support**: Invoices, payment issues, or credit problems.
8. **Customer Account Support**: Password resets, account changes.
9. **Loyalty Programs and Discounts**: Vouchers, discounts, or loyalty programs.
10. **Customer Feedback and Complaints**: Complaints or feedback submissions.

**Rules:**
- Respond ONLY with the exact category name (e.g., "Shipping and Delivery Updates (Aftersales)").
- If unsure, pick the most likely option.

**Email to classify:**
"{email_text}"

**Classification:**
"""

@traceable
async def classify_email(email_text: str, classification_prompt: str) -> str:
    """
    Classifies an email's content using the Google Gemini model
    based on a provided classification prompt.

    This asynchronous function initializes a Google AI client and sends the
    email text along with a system instruction (the classification prompt)
    to the Gemini model for content generation, specifically for classification.
    The response text from the model is then returned, with any trailing
    newline characters removed.

    Args:
        email_text (str): The content of the email to be classified. This text
                          will be sent to the Gemini model for analysis.
        classification_prompt (str): A string containing the system instruction
                                     that guides the Gemini model on how to classify 
                                     the email content.

    Returns:
        str: The classified category or response text generated by the Gemini model.
             Trailing newline characters are removed from the response.
    """

    client = genai.Client(
        http_options=HttpOptions(api_version="v1"), 
        vertexai=True,
        project="ogcs-av8t-ailaboratory",
        location="europe-west1"
    )

    response = await client.aio.models.generate_content(
        model="gemini-2.0-flash-001",
        contents=email_text,
        config=types.GenerateContentConfig(
            system_instruction=[classification_prompt]
        ),
    )

    return response.text.rstrip("\n")

